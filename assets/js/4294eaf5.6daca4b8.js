"use strict";(self.webpackChunkmaatth_github_io=self.webpackChunkmaatth_github_io||[]).push([[2344],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),c=u(n),d=i,h=c["".concat(l,".").concat(d)]||c[d]||m[d]||o;return n?r.createElement(h,s(s({ref:t},p),{},{components:n})):r.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,s=new Array(o);s[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[c]="string"==typeof e?e:i,s[1]=a;for(var u=2;u<o;u++)s[u]=n[u];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4990:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={sidebar_position:1},s="Synchronisation jira github",a={unversionedId:"devops/synchro-jira-github",id:"devops/synchro-jira-github",title:"Synchronisation jira github",description:"Imaginons un ticket Jira et une pull request associ\xe9e. Normalement, la version du ticket Jira et le milestone de la PR doivent correspondre. Mais tr\xe8s souvent, on change la version du ticket Jira sans mettre \xe0 jour le milestone.",source:"@site/docs/devops/synchro-jira-github.md",sourceDirName:"devops",slug:"/devops/synchro-jira-github",permalink:"/docs/devops/synchro-jira-github",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/devops/synchro-jira-github.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"DevOps",permalink:"/docs/category/devops"}},l={},u=[{value:"1 - Cr\xe9er un workflow github action",id:"1---cr\xe9er-un-workflow-github-action",level:2},{value:"2- tester le manuellement :",id:"2--tester-le-manuellement-",level:2},{value:"3- R\xe9cup\xe9rer l&#39;id du workflow",id:"3--r\xe9cup\xe9rer-lid-du-workflow",level:2},{value:"4- Cr\xe9er l&#39;automation Jira",id:"4--cr\xe9er-lautomation-jira",level:2}],p={toc:u},c="wrapper";function m(e){let{components:t,...o}=e;return(0,i.kt)(c,(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"synchronisation-jira-github"},"Synchronisation jira github"),(0,i.kt)("p",null,"Imaginons un ticket Jira et une pull request associ\xe9e. Normalement, la version du ticket Jira et le milestone de la PR doivent correspondre. Mais tr\xe8s souvent, on change la version du ticket Jira sans mettre \xe0 jour le milestone. "),(0,i.kt)("h1",{id:"but"},"But"),(0,i.kt)("p",null,"Cette article explique comment synchroniser automatiquement la version et le milestone de la PR correspondante.\nLa synchronisation doit se lancer uniquement en cas de modification de la version (donc pas de cron) et doit \xeatre la plus \xe9conomique possible. "),(0,i.kt)("h1",{id:"solution"},"Solution"),(0,i.kt)("p",null,"Un script de synchronisation s'executera sur un runner GitHub car gratuit, sous forme de workflow GitHub actions exploitant l'API Github pour modifier la PR. Le d\xe9clencheur sera un Jira automation, car il permet des sc\xe9narios complexe comme de faire un appel HTTP lorsqu'un champ sp\xe9cifique d'un ticket est modifi\xe9.\nNous prendrons comme exemple une version et un milestone qui sont diff\xe9rents (respectivement API-V0.0.1 et v0.0.1)."),(0,i.kt)("h2",{id:"1---cr\xe9er-un-workflow-github-action"},"1 - Cr\xe9er un workflow github action"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'name: Update pull request milestone from Jira issue version\n \non:\n  # workflow_dispatch allows to run this workflow manually from the Actions tab\n  workflow_dispatch:\n    inputs:\n      pull_request_title_prefix:\n        description: \'Specify the pull request key prefix (ex: CE-4001)\'\n        required: true\n      version:\n        description: \'Specify the Jira ticket version to update (ex: API-V0.0.2)\'\n        required: true\n \npermissions:\n  contents: write\n  pull-requests: write\n \njobs:\n  build:\n    runs-on: ubuntu-latest\n \n    steps:\n      - uses: actions/checkout@v4\n \n      - name: Inputs displays\n        run: |\n          echo "::notice title=Workflow ran with these inputs: :: pull_request_title_prefix=${{ github.event.inputs.pull_request_title_prefix }} and version=${{ github.event.inputs.version }}"\n \n      - name: \'Convert version to milestone label (ex: API-V0.0.2 -> v0.0.2)\'\n        run: |\n          milestone_label="v$(echo "${{ github.event.inputs.version }}" | sed \'s/[^0-9.]//g\')"\n \n          echo "milestone_label=$milestone_label" >> $GITHUB_ENV\n \n          echo -e "\\033[1;32m...  \u2705 milestone_label=$milestone_label\\033[0m"\n \n      - name: \'Getting milestone number from milestone label (ex: v0.0.2 -> 1)\'\n        run: |\n          milestone_number=$(\\\n          curl --silent -L \\\n          -H "Accept: application/vnd.github+json" \\\n          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \\\n          -H "X-GitHub-Api-Version: 2022-11-28" \\\n          https://api.github.com/repos/Next-Interactive/cleo-opta-feed-api/milestones \\\n          | jq --arg milestone_label "$milestone_label" \'.[] | select(.title == $milestone_label).number\')\n \n          # Check if milestone_number is empty\n          if [ -z "$milestone_number" ]; then\n            echo -e "\\033[1;31m...  \u274c Milestone not found.\\033[0m"\n            exit 1\n          fi\n \n          echo "milestone_number=$milestone_number" >> $GITHUB_ENV\n \n          echo -e "\\033[1;32m...  \u2705 milestone_number=$milestone_number\\033[0m"\n \n      - name: \'Get last open pull request number from pull request title prefix (ex: CE-4001 -> 1)\'\n        run: |\n          pull_request_number=$(curl --silent -L \\\n          -H "Accept: application/vnd.github+json" \\\n          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \\\n          -H "X-GitHub-Api-Version: 2022-11-28" \\\n          "https://api.github.com/repos/Next-Interactive/cleo-opta-feed-api/pulls?state=open&sort=created&direction=desc" \\\n          | jq --arg title_prefix "${{ github.event.inputs.pull_request_title_prefix }}" \'.[] | select(.title | contains($title_prefix)).number\' | head -n 1);\n \n          # Check if pull_request_number is empty\n          if [ -z "$pull_request_number" ]; then\n            echo -e "\\033[1;31m...  \u274c Pull request not found.\\033[0m"\n            exit 1\n          fi\n \n          echo "pull_request_number=$pull_request_number" >> $GITHUB_ENV\n \n          echo -e "\\033[1;32m...  \u2705 pull_request_number=$pull_request_number\\033[0m"\n \n      - name: \'Modify the milestone of the pull request\'\n        run: |\n          curl --silent -L \\\n          -H "Accept: application/vnd.github+json" \\\n          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \\\n          -H "X-GitHub-Api-Version: 2022-11-28" \\\n          -X PATCH \\\n          -d "{\\"milestone\\": \\"$milestone_number\\"}" \\\n          https://api.github.com/repos/Next-Interactive/cleo-opta-feed-api/issues/$pull_request_number;  # Have to use \'/issues/\' instead of \'/pulls/\'\n \n          echo -e "\\033[1;32m...  \u2705 pull request milestone updated\\033[0m"\n')),(0,i.kt)("h2",{id:"2--tester-le-manuellement-"},"2- tester le manuellement :"),(0,i.kt)("p",null,'Dans l\'onglet "Actions", s\xe9lectionner le workflow \xe0 gauche puis cliquer sur "Run workflow" \xe0 droite :'),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"unnamed-1.png",src:n(8899).Z,width:"1137",height:"722"})),(0,i.kt)("p",null,"Pour apparaitre \xe0 gauche, le script doit \xeatre dans la branche principale (main ou master)."),(0,i.kt)("h2",{id:"3--r\xe9cup\xe9rer-lid-du-workflow"},"3- R\xe9cup\xe9rer l'id du workflow"),(0,i.kt)("p",null,"Nous aurons besoin de l'id du workflow pour cr\xe9er notre Jira Automation.\nDans un terminal, faire cette appel Curl (apr\xe8s avoir remplac\xe9 le token github par le votre) :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'```bash \ncurl -L -H "Accept: application/vnd.github+json"\xa0 -H "Authorization: Bearer ghp_Azff......EnJ" -H "X-GitHub-Api-Version: 2022-11-28"\xa0https://api.github.com/repos/maatth/GitHubActionsTriggers/actions/workflows\n```\n')),(0,i.kt)("p",null,"Vous r\xe9cupererez la liste des workflows correspondant, \xe0 partir de laquelle vous pourrez extraire l'id de notre workflow : "),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n\xa0 "total_count": 1,\n\xa0 "workflows": [\n\xa0 \xa0 {\n\xa0 \xa0 \xa0 "id": 123351232, <--- ceci\n   ...\n}\n')),(0,i.kt)("h2",{id:"4--cr\xe9er-lautomation-jira"},"4- Cr\xe9er l'automation Jira"),(0,i.kt)("p",null,"Dans un projet Jira, aller sur 'Automation' then 'create rule':\n",(0,i.kt)("a",{parentName:"p",href:"https://maatthieujira.atlassian.net/jira/software/projects/SCRUM/settings/automation#/rule/new/__NEW__TRIGGER"},"https://maatthieujira.atlassian.net/jira/software/projects/SCRUM/settings/automation#/rule/new/__NEW__TRIGGER")," "),(0,i.kt)("p",null,'Pour la 1\xe8re \xe9tape, choisir "Field Value changed" et remplir les champs selon vos besoin:\n',(0,i.kt)("img",{alt:"unnamed-2.png",src:n(822).Z,width:"1586",height:"788"})),(0,i.kt)("p",null,"Puis cliquer sur 'add component' et remplissez le champs suivants :\xa0"),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Web request URL")," :\xa0",(0,i.kt)("a",{parentName:"p",href:"https://api.github.com/repos/maatth/GitHubActionsTriggers/actions/workflows/123351232/dispatches"},"https://api.github.com/repos/maatth/GitHubActionsTriggers/actions/workflows/123351232/dispatches"),"\n",(0,i.kt)("strong",{parentName:"p"},"HTTP method:")," POST\n",(0,i.kt)("strong",{parentName:"p"},"Web request body"),": Custom data\n",(0,i.kt)("strong",{parentName:"p"},"Custom data")," :\xa0"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-JSON"},'{\n\xa0 \xa0 "ref": "main",  <-- main ou master\n\xa0 \xa0 "inputs": {\n\xa0 \xa0 \xa0 \xa0 "pull_request_title_prefix": "{{issue.key}}",\n\xa0 \xa0 \xa0 \xa0\xa0"version": "{{issue.labels}}"\n\xa0 \xa0 }\n}\n')),(0,i.kt)("p",null,"vous pouvez adaptez \xe0 vos besoin en sachant que vous pouvez utiliser l'API Jira pour r\xe9cup\xe9rer les noms des fields :\n",(0,i.kt)("a",{parentName:"p",href:"https://maatthieu.atlassian.net/rest/api/2/issue/KAN-1?expand=names"},"https://maatthieu.atlassian.net/rest/api/2/issue/KAN-1?expand=names")),(0,i.kt)("p",null,"Dans la partie headers:\n",(0,i.kt)("strong",{parentName:"p"},"Accept :"),"\xa0application/vnd.github+json\n",(0,i.kt)("strong",{parentName:"p"},"Authorization:")," Bearer ghp_Az4...\n",(0,i.kt)("strong",{parentName:"p"},"X-GitHub-Api-Version:")," 2022-11-28"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"unnamed-5.png",src:n(8257).Z,width:"1302",height:"1232"})),(0,i.kt)("p",null,"Cliquer sur suivant, activ\xe9 la rules et donner lui un nom."),(0,i.kt)("p",null,"Astuce :\nPour executer un workflow github actions avec un appel Curl :"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'curl -L -X POST -H "Accept: application/vnd.github+json" -H "Authorization: Bearer <your_token>" -H "X-GitHub-Api-Version: 2022-11-28" https://api.github.com/repos/maatth/GitHubActionsTriggers/actions/workflows/123351232/dispatches -d \'{"ref":"main","inputs":{"pull_request_title_prefix":"SCRUM-1","version":"API-V0.0.2"}}\'\n')),(0,i.kt)("p",null,"Ressources :\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Mudlet/Mudlet/blob/development/.github/workflows/tag-pull-requests.yml"},"https://github.com/Mudlet/Mudlet/blob/development/.github/workflows/tag-pull-requests.yml"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/orgs/community/discussions/25724"},"https://github.com/orgs/community/discussions/25724"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/n8ebel/GitHubActionsAutomationSandbox/blob/main/.github/workflows/workflow_dispatch_example.yml"},"https://github.com/n8ebel/GitHubActionsAutomationSandbox/blob/main/.github/workflows/workflow_dispatch_example.yml"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/rest/issues/milestones?apiVersion=2022-11-28"},"https://docs.github.com/en/rest/issues/milestones?apiVersion=2022-11-28"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://docs.github.com/en/rest?apiVersion=2022-11-28"},"https://docs.github.com/en/rest?apiVersion=2022-11-28"),"\n",(0,i.kt)("a",{parentName:"p",href:"https://goobar.dev/manually-trigger-a-github-actions-workflow/"},"https://goobar.dev/manually-trigger-a-github-actions-workflow/")))}m.isMDXComponent=!0},8899:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/unnamed-1-c39f131b8a927bad9eaee35b93866094.png"},822:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/unnamed-2-a7b0f6773a4683eb15726b9ca932d9f7.png"},8257:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/unnamed-5-fb4ab126657923c8116eab3420ef1151.png"}}]);